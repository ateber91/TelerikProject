@model RegisterViewModel
@{
	ViewData["Title"] = "Register";
}

<h2>@ViewData["Title"]</h2>

<div class="row">
	<form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">
		<div class="row">
			<div class="col-md-10">
				<h4>Register a new sensor.</h4>
				<hr />
				<div asp-validation-summary="All" class="text-danger"></div>
				<div class="form-group">
					<label asp-for="Name"></label>
					<input asp-for="Name" class="form-control" maxlength="40" minlength="6" required />
					<span asp-validation-for="Name" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Latitude"></label>
					<input asp-for="Latitude" class="form-control" required />
					<span asp-validation-for="Latitude" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Longitude"></label>
					<input asp-for="Longitude" class="form-control" required />
					<span asp-validation-for="Longitude" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="AlarmMin"></label>
					<input asp-for="AlarmMin" class="form-control" id="AlMin" required />
					<span asp-validation-for="AlarmMin" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="AlarmMax"></label>
					<input asp-for="AlarmMax" class="form-control" id="AlMax" required />
					<span asp-validation-for="AlarmMax" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="PollingInterval"></label>
					<input asp-for="PollingInterval" class="form-control" required />
					<span asp-validation-for="PollingInterval" class="text-danger"></span>
				</div>
				<div class="form-group">
					<div class="checkbox">
						<label asp-for="IsPublic">
							<input asp-for="IsPublic" class="checkbox-control" required />
							@Html.DisplayNameFor(us => us.IsPublic)
						</label>
					</div>
				</div>
				<div class="form-group">
					<div class="checkbox">
						<label asp-for="AlarmTriggered">
							<input asp-for="AlarmTriggered" class="checkbox-control" required />
							@Html.DisplayNameFor(us => us.AlarmTriggered)
						</label>
					</div>
				</div>


				<div class="form-group">
					<label>Description</label>
					<textarea asp-for="Description" rows="4" cols="80" class="form-control" placeholder="Here can be your description" maxlength="250" minlength="3"></textarea>
					<span asp-validation-for="Description" class="text-danger"></span>
				</div>
				<button type="submit" class="btn btn-default">Register</button>
			</div>
			<div class="col-sm-1">
				<div class="form-group">
					<div id="states">
						@foreach (var sensor in Model.StateSensors)
						{
							<label asp-for="SensorId">@sensor.Tag</label>
							<input type="radio" asp-for="SensorId" class="form-control" value=@sensor.Id />
							<span asp-validation-for="SensorId" class="text-danger"></span>
						}
					</div>
					<div id="nonstates">
						@foreach (var sensor in Model.NonStateSensors)
						{
							<label asp-for="SensorId">@sensor.Tag</label>
							<input type="radio" asp-for="SensorId" class="form-control" value=@sensor.Id />
							<span asp-validation-for="SensorId" class="text-danger"></span>
						}
					</div>
				</div>
			</div>
		</div>
			
	</form>
</div>



@section Scripts {
	@await Html.PartialAsync("_ValidationScriptsPartial")
}

<script>
	$("#states").click(function () {
		$("#AlMin").prop('readonly', true);
		$("#AlMax").prop('readonly', true);
	});
</script>
<script>
	$("#nonstates").click(function () {
		$("#AlMin").prop('readonly', false);
		$("#AlMax").prop('readonly', false);
	});
</script>