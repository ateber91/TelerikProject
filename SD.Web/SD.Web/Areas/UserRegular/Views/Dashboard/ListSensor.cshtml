@using SD.Web.Areas.UserRegular.Models
@model UserSensorViewModel
@{
	ViewData["Title"] = "Sensor";
}

<h2>Sensor details</h2>

<div id="map" style="height: 350px; width: auto"></div>
<table class="table table-bordered">
	<tr>
		<td><label>Name: </label></td>
		<td><span contenteditable="false" class="editable">@Model.Name</span></td>
	</tr>
	<tr>
		<td><label>Description: </label></td>
		<td><span contenteditable="false" class="editable">@Model.Description</span></td>
	</tr>
	<tr>
		@if (Model.IsPublic)
		{
			<td>Public Sensor</td>
		}
		else
		{
			<td>Private Sensor</td>
		}
		@if (Model.AlarmTriggered)
		{
			<td>Alarm On</td>
		}
		else
		{
			<td>Alarm Off</td>
		}
	</tr>

	@if (Model.Sensor.IsState == true)
	{
		<tr>
			<td>
				<p>State</p>
				<div class="led-box">
					<div class="led-yellow" id="led-color"></div>
				</div>
			</td>
		</tr>
	}

</table>

<div class="form-row">
    <button type="reset" class="btn btn-default editButton"><span>Edit Content</span></button>
    @if (!Model.IsPublic)
    {
        <button type="submit" class="btn btn-danger"><a href="/delete-sensor?id=@Model.Id">Delete</a></button>
    }



</div>



@if (Model.Sensor.IsState == false)
{
	<div id="gauge-container">
		@(Html.Kendo().RadialGauge()
											  .Name("gauge")
											  .Pointer(pointer => pointer.Value(double.Parse(Model.Sensor.LastValue)))
											  .Scale(scale => scale
													.MinorUnit(1)
													.StartAngle(-30)
													.EndAngle(210)
													.Max(@Model.AlarmMax)
													.Min(@Model.AlarmMin)
									)
		)
	</div>
}

@section Scripts
	{
	@if (Model.Sensor.IsState == false)
	{
		<script>
            $(document).ready(() => {

                const timer = setInterval(() => {

                    fetch('Dashboard/value/@Model.SensorId', {
                        method: "GET"
                    })
                        .then((data) => data.json())
                        .then((data) => {
                        $("#gauge").data("kendoRadialGauge").value(1 * data);
                        })
                        .catch(console.log);

                }, @Model.UserInterval === 0 ? 1000 : @Model.UserInterval * 1000);
			});
		</script>
	}
	else
	{
		<script>
			setInterval(ajaxCall, @Model.UserInterval === 0 ? 1000 : @Model.UserInterval * 1000);

			function ajaxCall() {
				$.ajax({
				type: "GET",
				cache: false,
				url: 'Dashboard/value/@Model.SensorId',
				success: function (data) {
					if (data == 1) {
						document.getElementById("led-color").setAttribute('class', 'led-green')
					}
					else {
						document.getElementById("led-color").setAttribute('class', 'led-red')
						}

					}
				})
			}
		
		</script>
	}


	<script type="text/javascript">
        $(document).ready(function () {

            initGoogleMaps();

            $(".editButton").on('click', function () {
                let $values = []
                let $inputs = $('.editable');
                console.log($inputs);
                $inputs.each((i, e) => {
                    $values.push(e.innerHTML)
                })

                var value = $('.editable').attr('contenteditable');
                $('.editable').addClass("input-group-text");

                $
                if (value == 'false') {
                    $('.editButton > span').text("Save");
                    $('.editable').attr('contenteditable', 'true')
                    $('.editable').addClass("input-group-text");
                    console.log($inputs);
                }
                else {
                    $(".editable").attr('contenteditable', 'false');
                    $('.editable').removeClass("input-group-text");
                    $('.editButton > span').text("Edit Content");

                    let name = $inputs[0].innerHTML;
                    let description = $inputs[1].innerHTML;


                    $.post("/update-sensor", {
                        SensorId: '@Model.Id',
                        Name: name,
                        Description: description,
                        Coordinates: '@Model.Coordinates',
                        IsPublic: '@Model.IsPublic',
                        AlarmMin: '@Model.AlarmMin',
                        AlarmMax: '@Model.AlarmMax',
                        Value: '@Model.LastValueUser',
                        PullingInterval: '@Model.UserInterval',
                        TickOff: '@Model.AlarmTriggered',
                        Timestamp: '@Model.TimeStamp',
                        Type: '@Model.Type'
                    }),
                        function () {
                            console.log("success")
                        };

                }

            });

            function initGoogleMaps() {
                var myLatlng = new google.maps.LatLng(@Model.Coordinates.Split(',')[0], @Model.Coordinates.Split(',')[1]);
                var mapOptions = {
                    zoom: 13,
                    center: myLatlng,
                    scrollwheel: false, //we disable de scroll over the map, it is a really annoing when you scroll through page
                    styles: [{
                        "elementType": "geometry",
                        "stylers": [{
                            "color": "#1d2c4d"
                        }]
                    },
                    {
                        "elementType": "labels.text.fill",
                        "stylers": [{
                            "color": "#8ec3b9"
                        }]
                    },
                    {
                        "elementType": "labels.text.stroke",
                        "stylers": [{
                            "color": "#1a3646"
                        }]
                    },
                    {
                        "featureType": "administrative.country",
                        "elementType": "geometry.stroke",
                        "stylers": [{
                            "color": "#4b6878"
                        }]
                    },
                    {
                        "featureType": "administrative.land_parcel",
                        "elementType": "labels.text.fill",
                        "stylers": [{
                            "color": "#64779e"
                        }]
                    },
                    {
                        "featureType": "administrative.province",
                        "elementType": "geometry.stroke",
                        "stylers": [{
                            "color": "#4b6878"
                        }]
                    },
                    {
                        "featureType": "landscape.man_made",
                        "elementType": "geometry.stroke",
                        "stylers": [{
                            "color": "#334e87"
                        }]
                    },
                    {
                        "featureType": "landscape.natural",
                        "elementType": "geometry",
                        "stylers": [{
                            "color": "#023e58"
                        }]
                    },
                    {
                        "featureType": "poi",
                        "elementType": "geometry",
                        "stylers": [{
                            "color": "#283d6a"
                        }]
                    },
                    {
                        "featureType": "poi",
                        "elementType": "labels.text.fill",
                        "stylers": [{
                            "color": "#6f9ba5"
                        }]
                    },
                    {
                        "featureType": "poi",
                        "elementType": "labels.text.stroke",
                        "stylers": [{
                            "color": "#1d2c4d"
                        }]
                    },
                    {
                        "featureType": "poi.park",
                        "elementType": "geometry.fill",
                        "stylers": [{
                            "color": "#023e58"
                        }]
                    },
                    {
                        "featureType": "poi.park",
                        "elementType": "labels.text.fill",
                        "stylers": [{
                            "color": "#3C7680"
                        }]
                    },
                    {
                        "featureType": "road",
                        "elementType": "geometry",
                        "stylers": [{
                            "color": "#304a7d"
                        }]
                    },
                    {
                        "featureType": "road",
                        "elementType": "labels.text.fill",
                        "stylers": [{
                            "color": "#98a5be"
                        }]
                    },
                    {
                        "featureType": "road",
                        "elementType": "labels.text.stroke",
                        "stylers": [{
                            "color": "#1d2c4d"
                        }]
                    },
                    {
                        "featureType": "road.highway",
                        "elementType": "geometry",
                        "stylers": [{
                            "color": "#2c6675"
                        }]
                    },
                    {
                        "featureType": "road.highway",
                        "elementType": "geometry.fill",
                        "stylers": [{
                            "color": "#9d2a80"
                        }]
                    },
                    {
                        "featureType": "road.highway",
                        "elementType": "geometry.stroke",
                        "stylers": [{
                            "color": "#9d2a80"
                        }]
                    },
                    {
                        "featureType": "road.highway",
                        "elementType": "labels.text.fill",
                        "stylers": [{
                            "color": "#b0d5ce"
                        }]
                    },
                    {
                        "featureType": "road.highway",
                        "elementType": "labels.text.stroke",
                        "stylers": [{
                            "color": "#023e58"
                        }]
                    },
                    {
                        "featureType": "transit",
                        "elementType": "labels.text.fill",
                        "stylers": [{
                            "color": "#98a5be"
                        }]
                    },
                    {
                        "featureType": "transit",
                        "elementType": "labels.text.stroke",
                        "stylers": [{
                            "color": "#1d2c4d"
                        }]
                    },
                    {
                        "featureType": "transit.line",
                        "elementType": "geometry.fill",
                        "stylers": [{
                            "color": "#283d6a"
                        }]
                    },
                    {
                        "featureType": "transit.station",
                        "elementType": "geometry",
                        "stylers": [{
                            "color": "#3a4762"
                        }]
                    },
                    {
                        "featureType": "water",
                        "elementType": "geometry",
                        "stylers": [{
                            "color": "#0e1626"
                        }]
                    },
                    {
                        "featureType": "water",
                        "elementType": "labels.text.fill",
                        "stylers": [{
                            "color": "#4e6d70"
                        }]
                    }
                    ]
                };

                var map = new google.maps.Map(document.getElementById("map"), mapOptions);

                var marker = new google.maps.Marker({
                    position: myLatlng,
                    title: "Sensor"
                });

                // To add the marker to the map, call setMap();
                marker.setMap(map);
            }

        });

	</script>
	<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCoiGMouNF91fR1CfBO3iqfBxR-raPW7WM"></script>

}